@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap');

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

html,
body,
#root {
  height: 100%;
  width: 100%;
}

body {
  background: var(--color-white);
  padding: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;

  --comments-list-width: 240px;
  --header-height: 64px;
  --canvas-button-height: 36px;
  --pin-size: 34px;

  /* Colors */
  --color-dark: #1e1e1e;
  --color-dark-x-light: #696a6c;
  --color-grey-light: #c1c1c1;
  --color-grey-x-light: #dadce0;
  --color-white: #ffffff;

  --canvas-header-background-color: #282828;
  --canvas-background-color: #f5f5f5;
}

#root {
  padding: 80px;
  padding-top: calc(32px + var(--header-height));
}

.canvasWindow {
  border-radius: 8px;
  box-shadow:
    0px 2px 2px 0px rgba(0, 0, 0, 0.1),
    0px 2px 20px 0px rgba(0, 0, 0, 0.16);
  height: 100%;
  width: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.canvasHeader {
  background-color: var(--canvas-header-background-color);
  padding: 8px 12px;
  display: flex;
  position: relative;
  justify-content: center;
}

.canvasHeader h2 {
  color: var(--color-grey-light);
  font-size: 14px;
  font-weight: 400;
  margin: auto;
  opacity: 0.5;
  line-height: 20px;
}

.canvasHeader cord-page-presence {
  position: absolute;
  right: 12px;
}

.canvasHeader .cord-avatar-container {
  box-shadow: 2px 0 0 var(--canvas-header-background-color);
}

.canvasAndCordContainer {
  display: flex;
  background: var(--color-white);
  height: 100%;
  width: 100%;
  position: relative;
  /* Prevents scroll bars from appearing for the canvas */
  overflow: hidden;
}

.canvasContainer {
  height: 100%;
  flex: 1;
  overflow: hidden;
}

#stage {
  background-color: var(--canvas-background-color);
}

.canvasButtonGroup {
  position: absolute;
  bottom: 16px;
  left: 16px;
  display: flex;
  align-items: center;
  gap: 16px;
  /* The buttons will appear above the canvas and pins */
  z-index: 3;
}

.canvasButtonGroup > button {
  align-items: center;
  background: var(--color-dark);
  border-radius: 4px;
  border: none;
  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.08);
  color: var(--color-white);
  cursor: pointer;
  display: flex;
  padding: 10px 12px;
  gap: 8px;
  font-size: 14px;
}

.canvasButtonGroup button svg {
  width: 16px;
  height: 16px;
}

.canvasButtonGroup button:active {
  box-shadow: 0 0 0 var(--color-white);
}

.commentingModeCursor {
  cursor:
    url('/images/Pin.svg') 0 32,
    pointer;
}

/* Comments List */

.canvasAndCordContainer .cord-threaded-comments {
  border-left: 1px solid var(--color-grey-x-light);
  background: var(--color-white);
  flex-shrink: 0;
  overflow-y: auto;
  overflow-x: hidden;
  padding: 0;
  width: var(--comments-list-width);
  /* Shown above the canvas */
  z-index: 2;
}

/* The list of threads */
.cord-threaded-comments .cord-threaded-comments-thread-list {
  gap: 0;
  padding: 0;
}

/* Layout of message in the comments list */
.cord-threaded-comments .cord-message {
  grid-template-columns: repeat(2, auto) 2fr 16px;
  grid-template-rows: 24px repeat(3, auto);
  grid-template-areas:
    'avatar . . . optionsMenu '
    'authorName timestamp . . .'
    'messageContent messageContent messageContent messageContent .'
    'reactions reactions reactions reactions .';
  gap: 8px;
  border-radius: 0;
  background-color: transparent;
  padding-bottom: 8px;
  cursor: pointer;
  padding: 0;
}

/* Layout of message in the comments list if first message is deleted */
.cord-threaded-comments .cord-message.cord-deleted {
  color: var(--color-dark-x-light);
  grid-template-rows: 24px;
  grid-template-columns: 20px auto 1fr;
  grid-template-areas: 'icon message';
}

/* Removing the reactions button, and edit message */
.cord-threaded-comments
  .cord-message
  :is(
    .cord-reactions-container,
    [data-cord-button='select-emoji'],
    [data-cord-menu-item='message-edit']
  ) {
  display: none;
}

.cord-threaded-comments .cord-threaded-comments-thread {
  border-radius: 0;
  position: relative;
  padding: 16px 12px;
}

/* Creating the divider between each thread */
.cord-threaded-comments .cord-threaded-comments-thread::after {
  content: '';
  position: absolute;
  display: block;
  bottom: 0;
  border-bottom: 1px solid var(--color-grey-x-light);
  right: 0;
  left: 0;
  margin: 0px 12px;
}

.cord-threaded-comments .cord-threaded-comments-thread:hover,
.cord-threaded-comments
  .cord-message
  .cord-message-options-buttons
  [data-cord-button='thread-options']:hover {
  background: rgba(0, 0, 0, 0.06);
}

/* Disabling the default hover on the reply */
.cord-threaded-comments-thread .cord-expand-replies:hover,
/* Disabling background of thread options button */
.cord-threaded-comments
  .cord-message
  .cord-message-options-buttons
  [data-cord-button='thread-options'] {
  background: transparent;
}

/* Changes the color of the thread passed into the prop highlightThreadId in Threaded Comments */
.cord-threaded-comments .cord-threaded-comments-thread.cord-highlighted {
  background-color: rgba(84, 141, 84, 0.06);
}

.cord-threaded-comments-thread .cord-expand-replies {
  padding-left: 0;
  color: var(--color-dark-x-light);
}

.cord-threaded-comments-thread .cord-expand-replies cord-facepile {
  display: none;
}

/* Custom Individual Pins */

.canvasComment .active {
  /* overlays over all other pins */
  z-index: 1;
}

.canvasComment cord-thread.cord-component {
  left: calc(8px + var(--pin-size));
  position: absolute;
  /* line up the thread with the pin */
  top: calc(-1 * var(--pin-size));
  width: var(--comments-list-width)
}

.canvasComment cord-thread.cord-component.thread-on-the-left {
  left: calc(-1 * (var(--comments-list-width) + 20px));
}

.canvasComment cord-thread.cord-component.thread-on-the-top {
  bottom: 0;
  top: auto;
}

.canvasPin {
  background: var(--color-white);
  border-radius: 17px 17px 17px 2px;
  border: 1px solid var(--color-grey-x-light);
  bottom: 0;
  box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.16);
  cursor: default;
  display: flex;
  flex-direction: column;
  height: var(--pin-size);
  overflow: hidden;
  padding: 3px;
  position: absolute;
  transition:
    width 0.2s,
    height 0.2s,
    padding 0.2s;
  width: var(--pin-size);
}

.canvasPin:hover {
  /* overlays over any active pin or thread */
  z-index: 2;
}

.canvasPin .cord-message {
  grid-template-columns: 1fr;
  grid-template-rows: auto;
  grid-template-areas:
    'authorName timestamp'
    'messageContent messageContent';
  row-gap: 8px;
  column-gap: 8px;
  border-radius: 0;
  background-color: transparent;
  padding-left: 0;
  padding-right: 0;
}

.canvasPin
  .cord-message
  :is(.cord-author-name, .cord-timestamp, .cord-message-text) {
  font-size: 12px;
}

.canvasPin .cord-message .cord-message-text {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
}

.canvasPin
  .cord-message
  :is(
    .cord-avatar-container,
    .cord-message-options-buttons,
    .cord-reactions-container
  ) {
  display: none;
}

.previewMessage:hover {
  height: 120px;
  width: 300px;
  padding: 16px;
}

.canvasPin .cord-avatar-container {
  height: 26px;
  width: 26px;
  transition: transform 0.2s;
}

.canvasPin .cord-tooltip {
  display: none;
}

cord-thread.cord-component.hidden {
  visibility: hidden;
}

.message {
  display: block;
  padding-bottom: 200px;
  transition: transform 0.2s;
}

/* Generic cord component */
.cord-component .cord-avatar-container {
  border-radius: 50%;
}

.zoomControls {
  display: flex;
  border-radius: 4px;
  background: var(--color-dark);
  align-items: center;
  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.08);
  justify-content: center;
}

.zoomControls * {
  border: none;
  color: var(--color-white);
  padding: 10px 12px;
  font-size: 14px;
  line-height: 16px;
}

.zoomControls > button {
  cursor: pointer;
  width: var(--canvas-button-height);
  background-color: transparent;
}

.zoomControls .scale {
  text-align: center;
  width: 60px;
}

/* Grouped Pins */
.groupedPins {
  align-items: center;
  background-color: #fff;
  border-radius: 50%;
  color: black;
  cursor: pointer;
  display: flex;
  height: 50px;
  justify-items: center;
  position: absolute;
  transform: translate(0px, -50px);
  width: 50px;
}

.groupedPins p {
  width: 100%;
  font-weight: 800;
  text-align: center;
}
